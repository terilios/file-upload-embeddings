# Stage 1: Build dependencies
FROM python:3.10-slim-bullseye as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    pkg-config \
    python3-dev \
    cmake \
    poppler-utils \
    tesseract-ocr \
    tesseract-ocr-eng \
    libpoppler-cpp-dev \
    libtesseract-dev \
    libleptonica-dev \
    postgresql-client \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Create and activate virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python dependencies in stages for better caching
COPY requirements.txt .

# Upgrade pip and install basic tools
RUN pip install --no-cache-dir wheel setuptools pip --upgrade

# Install numpy, scipy, and pandas first (commonly used base packages)
RUN pip install --no-cache-dir \
    numpy==1.24.3 \
    scipy==1.10.1 \
    pandas==2.0.2

# Install ML-related packages
RUN pip install --no-cache-dir \
    torch==2.0.0 \
    torchvision==0.15.0 \
    transformers==4.30.0 \
    sentence-transformers==2.2.2 \
    scikit-learn==1.2.2

# Install remaining dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Stage 2: Runtime
FROM python:3.10-slim-bullseye as runtime

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    poppler-utils \
    tesseract-ocr \
    tesseract-ocr-eng \
    curl \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Install wait-for-it script
ADD https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh /wait-for-it.sh
RUN chmod +x /wait-for-it.sh

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set working directory and environment variables
WORKDIR /app
ENV PYTHONPATH=/app
ENV MODEL_CACHE_DIR=/app/.cache
ENV TRANSFORMERS_CACHE=/app/.cache/huggingface
ENV SENTENCE_TRANSFORMERS_HOME=/app/.cache/sentence_transformers
ENV TORCH_HOME=/app/.cache/torch

# Create cache directories
RUN mkdir -p /app/.cache/huggingface \
    /app/.cache/sentence_transformers \
    /app/.cache/torch

# Copy application code
COPY . .

# Set up health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run the application
CMD ["/bin/bash", "-c", "/wait-for-it.sh postgres:5432 -t 60 -- /wait-for-it.sh redis:6379 -t 60 -- uvicorn app.backend.main:app --host 0.0.0.0 --port 8000"]
