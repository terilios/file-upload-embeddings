# Stage 1: Build dependencies
FROM python:3.10-alpine3.18 as builder

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Install system dependencies
RUN apk add --no-cache \
    build-base \
    python3-dev \
    cmake \
    poppler-utils \
    tesseract-ocr \
    postgresql-client \
    libpq-dev \
    wget \
    ca-certificates \
    curl \
    tesseract-ocr-data-eng \
    gfortran \
    openblas-dev \
    linux-headers \
    musl-dev \
    gcc \
    g++ \
    libstdc++ \
    libc-dev \
    py3-numpy-dev

# Create and activate virtual environment
WORKDIR /app
COPY requirements.txt .
RUN python3 -m venv venv && \
    . venv/bin/activate && \
    pip install --upgrade pip setuptools wheel && \
    pip install --no-cache-dir --prefer-binary numpy==1.24.3 && \
    pip install --no-cache-dir --prefer-binary scikit-learn==1.2.2 && \
    pip install --no-cache-dir --prefer-binary -r requirements.txt

# Copy application code
COPY . .

# Stage 2: Runtime
FROM python:3.10-alpine3.18 as runtime

# Install runtime dependencies
RUN apk add --no-cache \
    poppler-utils \
    tesseract-ocr \
    tesseract-ocr-data-eng \
    postgresql-client \
    curl

# Copy virtual environment and application code
COPY --from=builder /app /app

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Install wait-for-it script
ADD https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh /wait-for-it.sh
RUN chmod +x /wait-for-it.sh

# Set up health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run the application
CMD ["/bin/sh", "-c", "/wait-for-it.sh postgres:5432 -t 60 -- /wait-for-it.sh redis:6379 -t 60 -- uvicorn app.main:app --host 0.0.0.0 --port 8000"]
